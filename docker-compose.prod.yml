version: '3.8'

services:
  api:
    build: .
    container_name: acoomh-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database
      - ConnectionStrings__DefaultConnection=Server=db;Database=acumh;Uid=root;Pwd=${MYSQL_ROOT_PASSWORD}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET}
      - Jwt__Issuer=https://api.acoomh.ro
      - Jwt__Audience=https://acoomh.ro
      
      # File Storage
      - FileStorage__BasePath=/var/www/uploads
      - FileStorage__BaseUrl=https://api.acoomh.ro/files
      
      # Security
      - ASPNETCORE_ENVIRONMENT=Production
      - Security__RequireHttps=true
      - Security__AllowedOrigins__0=https://acoomh.ro
      - Security__AllowedOrigins__1=https://www.acoomh.ro
      
    volumes:
      - uploads_data:/var/www/uploads
      - logs_data:/app/logs
    depends_on:
      - db
    networks:
      - acoomh-network

  db:
    image: mysql:8.0
    container_name: acoomh-db
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=acumh
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - acoomh-network

  nginx:
    image: nginx:alpine
    container_name: acoomh-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - uploads_data:/var/www/uploads:ro
    depends_on:
      - api
    networks:
      - acoomh-network

volumes:
  db_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  acoomh-network:
    driver: bridge
